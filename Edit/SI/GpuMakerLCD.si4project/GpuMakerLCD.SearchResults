---- xStreamBufferSendFromISR Matches (22 in 7 files) ----
message_buffer.h (GpuTestUart\Middlewares\Third_Party\FreeRTOS\Source\include) line 407 : #define xMessageBufferSendFromISR( xMessageBuffer, pvTxData, xDataLengthBytes, pxHigherPriorityTaskWoken ) xStreamBufferSendFromISR( ( StreamBufferHandle_t ) xMessageBuffer, pvTxData, xDataLengthBytes, pxHigherPriorityTaskWoken )
mpu_prototypes.h (GpuTestUart\Middlewares\Third_Party\FreeRTOS\Source\include) line 139 : size_t MPU_xStreamBufferSendFromISR( StreamBufferHandle_t xStreamBuffer, const void *pvTxData, size_t xDataLengthBytes, BaseType_t * const pxHigherPriorityTaskWoken );
mpu_wrappers.h (GpuTestUart\Middlewares\Third_Party\FreeRTOS\Source\include) line 143 : 		#define xStreamBufferSendFromISR				MPU_xStreamBufferSendFromISR
vBasicStreamBufferSendFromISR in shell_app.c (userCode) : 		xStreamBufferSendFromISR( xStreamBuffer,
HAL_UART_RxCpltCallback in shell_app.c (userCode) :   size_t sendCnt = xStreamBufferSendFromISR( Rx2StreamBuffer,
shell_app.c (userCode) line 303 :     xReturned = xStreamBufferSendFromISR( xStreamBuffer, ( void * ) pucData, x6ByteLength, NULL );
prvSingleTaskTests in StreamBufferDemo.c (userCode) : 			xReturned = xStreamBufferSendFromISR( xStreamBuffer, ( void * ) pucData, x6ByteLength, NULL );
vPeriodicStreamBufferProcessing in StreamBufferDemo.c (userCode) : 		xStreamBufferSendFromISR( xInterruptStreamBuffer, ( const void * ) &( pcDataSentFromInterrupt[ xNextChar ] ), sizeof( char ), &xHigherPriorityTaskWoken );
stream_buffer.c (GpuTestUart\Middlewares\Third_Party\FreeRTOS\Source) line 588 : size_t xStreamBufferSendFromISR( StreamBufferHandle_t xStreamBuffer,
stream_buffer.h (GpuTestUart\Middlewares\Third_Party\FreeRTOS\Source\include) line 243 :  * xStreamBufferSendFromISR() to write to a stream buffer from an interrupt
stream_buffer.h (GpuTestUart\Middlewares\Third_Party\FreeRTOS\Source\include) line 316 : size_t xStreamBufferSendFromISR( StreamBufferHandle_t xStreamBuffer,
stream_buffer.h (GpuTestUart\Middlewares\Third_Party\FreeRTOS\Source\include) line 341 :  * xStreamBufferSendFromISR() to write to a stream buffer from an interrupt
stream_buffer.h (GpuTestUart\Middlewares\Third_Party\FreeRTOS\Source\include) line 355 :  * xStreamBufferSendFromISR() can make data available, and so cause a task that
stream_buffer.h (GpuTestUart\Middlewares\Third_Party\FreeRTOS\Source\include) line 357 :  * xStreamBufferSendFromISR() causes a task to leave the Blocked state, and the
stream_buffer.h (GpuTestUart\Middlewares\Third_Party\FreeRTOS\Source\include) line 359 :  * task that was interrupted), then, internally, xStreamBufferSendFromISR()
stream_buffer.h (GpuTestUart\Middlewares\Third_Party\FreeRTOS\Source\include) line 361 :  * xStreamBufferSendFromISR() sets this value to pdTRUE, then normally a
stream_buffer.h (GpuTestUart\Middlewares\Third_Party\FreeRTOS\Source\include) line 383 :     xBytesSent = xStreamBufferSendFromISR( xStreamBuffer,
stream_buffer.h (GpuTestUart\Middlewares\Third_Party\FreeRTOS\Source\include) line 395 :     // xStreamBufferSendFromISR() then a task that has a priority above the
stream_buffer.h (GpuTestUart\Middlewares\Third_Party\FreeRTOS\Source\include) line 405 :  * \defgroup xStreamBufferSendFromISR xStreamBufferSendFromISR
stream_buffer.h (GpuTestUart\Middlewares\Third_Party\FreeRTOS\Source\include) line 408 : size_t xStreamBufferSendFromISR( StreamBufferHandle_t xStreamBuffer,
